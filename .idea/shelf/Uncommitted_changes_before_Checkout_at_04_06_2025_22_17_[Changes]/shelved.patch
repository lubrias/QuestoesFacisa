Index: clinica/veterinaria/Gerente/Animal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/clinica/veterinaria/Gerente/Animal.java b/clinica/veterinaria/Gerente/Animal.java
new file mode 100644
--- /dev/null	(date 1749085089541)
+++ b/clinica/veterinaria/Gerente/Animal.java	(date 1749085089541)
@@ -0,0 +1,59 @@
+package clinica.veterinaria.Gerente;
+
+public class Animal {
+    private String nome;
+    private String tipo;
+    private int idade;
+    private String nomedono;
+
+    public Animal (String nome,String tipo,int idade, String nomedono){
+        this.nome=nome;
+        this.tipo=tipo;
+        this.idade=idade;
+        this.nomedono=nomedono;
+
+    }
+    public String getNome(){
+        return nome;
+    }
+
+    public String getTipo(){
+        return tipo;
+
+    }
+
+    public int getIdade() {
+        return idade;
+    }
+
+    public String getNomedono(){
+        return nomedono;
+    }
+    public void setNome(String nome) {
+        this.nome = nome;
+    }
+
+    public void setTipo(String tipo) {
+        this.tipo = tipo;
+    }
+
+    public void setIdade(int idade) {
+        this.idade = idade;
+    }
+
+    public void setNomedono(String nomedono) {
+        this.nomedono = nomedono;
+    }
+
+    public String toString() {
+        return "Animal{" +
+                "nome='" + nome + '\'' +
+                ", tipo='" + tipo + '\'' +
+                ", idade=" + idade +
+                ", nomeDono='" + nomedono + '\'' +
+                '}';
+    }
+
+    public void adicionarAnimal(Animal novoAnimal) {
+    }
+}
Index: clinica/veterinaria/Lojacliente/Clientes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/clinica/veterinaria/Lojacliente/Clientes.java b/clinica/veterinaria/Lojacliente/Clientes.java
new file mode 100644
--- /dev/null	(date 1749085089544)
+++ b/clinica/veterinaria/Lojacliente/Clientes.java	(date 1749085089544)
@@ -0,0 +1,132 @@
+package clinica.veterinaria.Lojacliente;
+
+import clinica.veterinaria.Gerente.Animal;
+
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Scanner;
+
+
+public class Clientes {
+    private String nomeClinica;
+    private List<Animal> animalList;
+
+    public Clientes(String nomeClinica) {
+        this.nomeClinica = nomeClinica;
+        this.animalList = new ArrayList<>();
+    }
+
+
+    public void adicionarAnimal(Animal animal) {
+        this.animalList.add(animal);
+        System.out.println(animal.getNome() + " foi adicionado(a) à clínica " + this.nomeClinica);
+    }
+
+    public void removerAnimal(String nomeAnimal) {
+        Animal animalRemover = null;
+        for (Animal animal : animalList) {
+            if (animal.getNome().equalsIgnoreCase(nomeAnimal)) {
+                animalRemover = animal;
+                break;
+            }
+        }
+
+        if (animalRemover != null) {
+            this.animalList.remove(animalRemover);
+            System.out.println(nomeAnimal + " foi removido(a) da clínica " + this.nomeClinica);
+        } else {
+            System.out.println("Animal com nome '" + nomeAnimal + "' não encontrado(a) na clínica " + this.nomeClinica);
+        }
+    }
+
+    public void listarAnimais() {
+        if (animalList.isEmpty()) {
+            System.out.println("A clínica " + this.nomeClinica + " não possui animais cadastrados.");
+        } else {
+            System.out.println("\n--- Animais na clínica " + this.nomeClinica + " ---");
+            for (Animal animal : animalList) {
+                
+                System.out.println(animal);
+            }
+            System.out.println("------------------------------------");
+        }
+    }
+
+
+    public static void main(String[] args) {
+        System.out.println("Bem vindo ao petshop Ramon caramelo ");
+
+
+        Scanner scan = new Scanner(System.in);
+
+
+        Clientes meuPetshop = new Clientes("Petshop Ramon Caramelo");
+
+
+        while (true) {
+            System.out.println("1) Adicionar animal \n " +
+                    "2) Remover animal \n" +
+                    "3) Listar animais. \n" +
+                    "0) Sair do programa. \n");
+
+
+            String opcao;
+            opcao = scan.nextLine();
+            System.out.println("Você escolheu a opção " + opcao);
+
+
+            switch (opcao) {
+                case "1":
+                    System.out.println("\n--- Adicionar Novo Animal ---");
+                    System.out.print("Nome do animal: ");
+
+                    String nomeAnimal = scan.nextLine();
+                    System.out.print("Tipo do animal (cachorro, gato, etc.): ");
+                    String tipoAnimal = scan.nextLine();
+                    System.out.print("Idade do animal: ");
+                    int idadeAnimal = 0;
+                    try {
+                        idadeAnimal = Integer.parseInt(scan.nextLine());
+                    } catch (NumberFormatException e) {
+                        System.out.println("Idade inválida! Por favor, digite um número.");
+
+                        break;
+                    }
+
+
+                    System.out.print("Nome do dono: ");
+                    String nomeDono = scan.nextLine();
+
+
+                    Animal novoAnimal = new Animal(nomeAnimal, tipoAnimal, idadeAnimal, nomeDono);
+
+
+                    meuPetshop.adicionarAnimal(novoAnimal);
+                    break;
+
+
+                case "2":
+                    System.out.println("\n--- Remover Animal ---");
+                    System.out.print("Digite o nome do animal a ser removido: ");
+                    String nomeRemover = scan.nextLine();
+                    meuPetshop.removerAnimal(nomeRemover);
+                    break;
+
+                case "3":
+                    System.out.println("\n--- Listar Animais ---");
+                    meuPetshop.listarAnimais();
+                    break;
+
+                case "0":
+                    System.out.println("\nSaindo do Petshop. Volte sempre!");
+                    scan.close();
+                    return;
+
+                default:
+                    System.out.println("Opção inválida! Por favor, digite um número de 0 a 3.");
+                    break;
+            }
+        }
+    }
+}
\ No newline at end of file
Index: src/Questao2/Loja.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Questao2/Loja.java b/src/Questao2/Loja.java
new file mode 100644
--- /dev/null	(date 1749085089547)
+++ b/src/Questao2/Loja.java	(date 1749085089547)
@@ -0,0 +1,78 @@
+package Questao2;
+
+import java.util.ArrayList;
+
+public class Loja {
+    private ArrayList<Produto> produtos;
+
+    public Loja() {
+        this.produtos = new ArrayList<>();
+    }
+
+    public void adicionarProduto(Produto produto) {
+        this.produtos.add(produto);
+        System.out.println("Produto: " + produto.getNome() + " adicionado com sucesso.");
+    }
+
+    public Produto buscarProduto(int codigo) {
+        for (Produto produto : produtos) {
+            if (produto.getCodigo() == codigo) {
+                return produto;
+            }
+        }
+        return null;
+    }
+
+    public boolean verificarProdutoEstoque(int codigo) {
+        Produto produto = buscarProduto(codigo);
+        if (produto != null && produto.getQuantidadeEstoque() > 0) {
+            return true;
+        }
+        return false;
+    }
+
+    public boolean realizarVenda(int codigo, int quantidadeVendida) {
+        Produto produto = buscarProduto(codigo);
+        if (produto != null) {
+            if (produto.getQuantidadeEstoque() >= quantidadeVendida) {
+                produto.setQuantidadeEstoque(produto.getQuantidadeEstoque() - quantidadeVendida);
+                System.out.println("Venda de " + quantidadeVendida + "unidades de ' " + produto.getNome() + "' realizada. Estoque atual: " + produto.getQuantidadeEstoque());
+                return true;
+            } else {
+                System.out.println("Estoque insuficiente para '" + produto.getNome() + "' Disponível: " + produto.getQuantidadeEstoque());
+                return false;
+            }
+        } else {
+            System.out.println("Produto com código " + codigo + "não encontrado.");
+            return false;
+        }
+    }
+
+
+    public void exibirProdutos(int limiteEstoque) {
+        System.out.println("\n--- Produtos com estoque abaixo de "+ limiteEstoque + " Unidades ---");
+        boolean encontrado = false;
+        for (Produto produto: produtos) {
+            if (produto.getQuantidadeEstoque() < limiteEstoque) {
+                System.out.println(produto);
+                encontrado = true;
+            }
+        }
+        if (!encontrado) {
+            System.out.println("Nenhum produto com estoque abaixo de "+limiteEstoque + "unidades.");
+        }
+        System.out.println("------------------");
+    }
+
+    public void exibirTodosProdutos() {
+        System.out.println("Todos os produtos da loja: ");
+        if (produtos.isEmpty()) {
+            System.out.println("A loja não possui produtos cadastrados.");
+            return;
+        }
+        for (Produto produto: produtos) {
+            System.out.println(produto);
+        }
+        System.out.println("---------------------");
+    }
+}
Index: src/Questao2/Produto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Questao2/Produto.java b/src/Questao2/Produto.java
new file mode 100644
--- /dev/null	(date 1749085089549)
+++ b/src/Questao2/Produto.java	(date 1749085089549)
@@ -0,0 +1,57 @@
+package Questao2;
+import java.util.Scanner;
+import java.util.ArrayList;
+
+public class Produto {
+    private int codigo;
+    private String nome;
+    private double preco;
+    private int quantidadeEstoque;
+
+    public Produto(int codigo, String nome, double preco, int quantidadeEstoque) {
+        this.codigo = codigo;
+        this.nome = nome;
+        this.preco = preco;
+        this.quantidadeEstoque = quantidadeEstoque;
+    }
+
+    public int getCodigo() {
+        return codigo;
+    }
+
+    public void setCodigo(int codigo) {
+        this.codigo = codigo;
+    }
+
+    public String getNome() {
+        return nome;
+    }
+
+    public void setNome(String nome) {
+        this.nome = nome;
+    }
+
+    public double getPreco() {
+        return preco;
+    }
+
+    public void setPreco(double preco) {
+        this.preco = preco;
+    }
+
+    public int getQuantidadeEstoque() {
+        return quantidadeEstoque;
+    }
+
+    public void setQuantidadeEstoque(int quantidadeEstoque) {
+        this.quantidadeEstoque = quantidadeEstoque;
+    }
+
+    @Override
+    public String toString() {
+        return "Código: "+codigo+
+                ", Nome: "+nome+
+                ", Preço: R$"+String.format("%.2f", preco) +
+                ", Estoque: "+quantidadeEstoque;
+    }
+}
Index: src/Questao2/ProdutoTeste01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Questao2/ProdutoTeste01.java b/src/Questao2/ProdutoTeste01.java
new file mode 100644
--- /dev/null	(date 1749085089551)
+++ b/src/Questao2/ProdutoTeste01.java	(date 1749085089551)
@@ -0,0 +1,41 @@
+package Questao2;
+
+public class ProdutoTeste01 {
+    public static void main(String[] args) {
+        Loja minhaLoja = new Loja();
+
+        Produto p1 = new Produto(12,"Celular",1200.00,10);
+        Produto p2 = new Produto(102, "Fone de ouvido",1500.00,5);
+        Produto p3 = new Produto(10,"Camisa Térmica",130.50,4);
+
+
+        minhaLoja.adicionarProduto(p1);
+        minhaLoja.adicionarProduto(p2);
+        minhaLoja.adicionarProduto(p3);
+
+        Produto produtoBuscado = minhaLoja.buscarProduto(102);
+        if (produtoBuscado != null) {
+            System.out.println("Produto encontrado: "+produtoBuscado.getNome());
+        } else {
+            System.out.println("Produto não encontrado.");
+        }
+        System.out.println("Verificando estoque:");
+        System.out.println("Há celular em estoque (cód 12) ?");
+        if (minhaLoja.verificarProdutoEstoque(12) == true) {
+            System.out.println("Existe sim! 10 celulares");
+        } else {
+            System.out.println("não");
+        }
+
+
+        System.out.println("Tentando vender: ");
+
+        minhaLoja.realizarVenda(102,2);
+        minhaLoja.realizarVenda(12,11);
+
+        minhaLoja.exibirProdutos(10);
+
+
+        minhaLoja.exibirTodosProdutos();
+        }
+    }
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#\u0000 \u0000Q\u0000u\u0000e\u0000s\u0000t\u0000o\u0000e\u0000s\u0000F\u0000a\u0000c\u0000i\u0000s\u0000a\u0000\r\u0000\n\u0000\r\u0000\n\u0000\r\u0000\n\u0000\r\u0000\n\u0000
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision d4b5917971883480f707cb8169763f65516b0179)
+++ b/README.md	(date 1749085854842)
@@ -1,9 +1,1 @@
-#   Q u e s t o e s F a c i s a 
- 
- 
- 
- 
- 
- 
- 
- 
\ No newline at end of file
+# QuestoesFacisa
diff --git a/.gitignore b/.gitignore
new file mode 100644
